{"version":3,"sources":["main.js"],"names":["root","self","global","ArrayProto","Array","prototype","push","previousExile","Exile","Ctor","obj","_wrapped","exports","nodeType","module","VERSION","allMethod","forEach","key","noConflict","mixin","each","functions","name","func","args","apply"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,CAAC,YAAY;AAAA;AAAA;;AACX,MAAMA,OAAO,QAAOC,IAAP,uDAAOA,IAAP,MAAe,QAAf,IAA2BA,KAAKA,IAAL,KAAcA,IAAzC,IAAiDA,IAAjD,IACX,QAAOC,MAAP,uDAAOA,MAAP,MAAiB,QAAjB,IAA6BA,OAAOA,MAAP,KAAkBA,MAA/C,IAAyDA,MAD9C,IAEX,IAFW,IAGX,EAHF;;AAKA,MAAMC,aAAaC,MAAMC,SAAzB;AACA,MAAMC,OAAOH,WAAWG,IAAxB;;AAEA,MAAMC,gBAAgBP,KAAKQ,KAA3B;;AAEA,MAAMC,OAAO,SAAPA,IAAO,GAAY,CAAE,CAA3B;;AAEA,MAAMD,QAAQ,SAARA,KAAQ,CAACE,GAAD,EAAS;AACrB,QAAIA,eAAeF,KAAnB,EAA0B,OAAOE,GAAP;AAC1B,QAAI,EAAE,iBAAgBF,KAAlB,CAAJ,EAA8B,OAAO,IAAIA,KAAJ,CAAUE,GAAV,CAAP;AAC9B,UAAKC,QAAL,GAAgBD,GAAhB;AACD,GAJD;;AAMA,MAAI,OAAOE,OAAP,IAAkB,WAAlB,IAAiC,CAACA,QAAQC,QAA9C,EAAwD;AACtD,QAAI,OAAOC,MAAP,IAAiB,WAAjB,IAAgC,CAACA,OAAOD,QAAxC,IAAoDC,OAAOF,OAA/D,EAAwE;AACtEA,gBAAUE,OAAOF,OAAP,GAAiBJ,KAA3B;AACD;AACDI,YAAQJ,KAAR,GAAgBA,KAAhB;AACD,GALD,MAKO;AACLR,SAAKQ,KAAL,GAAaA,KAAb;AACD;;AAEDA,QAAMO,OAAN,GAAgB,OAAhB;;AAEA,MAAMC,uNAAN;;AAaA;AACA,sBAAYA,SAAZ,EAAuBC,OAAvB,CAA+B,eAAO;AACpC,QAAI,OAAOD,UAAUE,GAAV,CAAP,KAA0B,UAA9B,EAA0CV,MAAMU,GAAN,IAAaF,UAAUE,GAAV,CAAb;AAC3C,GAFD;;AAIAV,QAAMW,UAAN,GAAmB,YAAM;AACvBnB,SAAKQ,KAAL,GAAaD,aAAb;AACA;AACD,GAHD;;AAKAC,QAAMY,KAAN,GAAc,UAACV,GAAD,EAAS;AACrBF,UAAMa,IAAN,CAAWb,MAAMc,SAAN,CAAgBZ,GAAhB,CAAX,EAAiC,UAACa,IAAD,EAAU;AACzC,UAAMC,OAAOhB,MAAMe,IAAN,IAAcb,IAAIa,IAAJ,CAA3B;AACAf,YAAMH,SAAN,CAAgBkB,IAAhB,IAAwB,YAAM;AAC5B,YAAME,OAAO,CAAC,MAAKd,QAAN,CAAb;AACAL,aAAKoB,KAAL,CAAWD,IAAX;AACA,eAAOD,KAAKE,KAAL,CAAWlB,KAAX,EAAkBiB,IAAlB,CAAP;AACD,OAJD;AAKD,KAPD;;AASA,WAAOjB,KAAP;AACD,GAXD;;AAaAA,QAAMY,KAAN,CAAYZ,KAAZ;AACD,CAnED","file":"main.min.js","sourcesContent":["import EArray from './Array';\nimport ECollection from './Collection';\nimport EDate from './Date';\nimport EFunction from './Function';\nimport ELang from './Lang';\nimport EMath from './Math';\nimport ENumber from './Number';\nimport EObject from './Object';\nimport EString from './String';\nimport EUtil from './Util';\n\n(function () {\n  const root = typeof self == 'object' && self.self === self && self ||\n    typeof global == 'object' && global.global === global && global ||\n    this ||\n    {};\n\n  const ArrayProto = Array.prototype;\n  const push = ArrayProto.push;\n\n  const previousExile = root.Exile;\n\n  const Ctor = function () {};\n\n  const Exile = (obj) => {\n    if (obj instanceof Exile) return obj;\n    if (!(this instanceof Exile)) return new Exile(obj);\n    this._wrapped = obj;\n  };\n\n  if (typeof exports != 'undefined' && !exports.nodeType) {\n    if (typeof module != 'undefined' && !module.nodeType && module.exports) {\n      exports = module.exports = Exile;\n    }\n    exports.Exile = Exile;\n  } else {\n    root.Exile = Exile;\n  }\n\n  Exile.VERSION = '1.0.0';\n\n  const allMethod = {\n    ...EArray,\n    ...ECollection,\n    ...EDate,\n    ...EFunction,\n    ...ELang,\n    ...EMath,\n    ...ENumber,\n    ...EObject,\n    ...EString,\n    ...EUtil\n  };\n\n  // 将所有的方法全部挂载到 Exile 上\n  Object.keys(allMethod).forEach(key => {\n    if (typeof allMethod[key] === 'function') Exile[key] = allMethod[key];\n  });\n\n  Exile.noConflict = () => {\n    root.Exile = previousExile;\n    return this;\n  };\n\n  Exile.mixin = (obj) => {\n    Exile.each(Exile.functions(obj), (name) => {\n      const func = Exile[name] = obj[name];\n      Exile.prototype[name] = () => {\n        const args = [this._wrapped];\n        push.apply(args, arguments);\n        return func.apply(Exile, args);\n      };\n    });\n\n    return Exile;\n  };\n\n  Exile.mixin(Exile);\n})();\n"]}